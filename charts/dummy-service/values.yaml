# Default values for checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# Override the "name" value, which is used to annotate some of
# the resources that are created by this Chart (using "app.kubernetes.io/name").
# +docs:property
nameOverride: ""

# Override the "fullname" value. This value is used as part of
# most of the names of the resources created by this Helm chart.
# +docs:property
fullnameOverride: ""

# This namespace allows you to define where the services are installed into.
# If not set then they use the namespace of the release.
# This is helpful when installing a chart dependency (sub chart).
namespace: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # The container registry to pull the image from.
  # For example:
  #   registry: kms.common.repositories.cloud.sap
  #   repository: cmk
  # +docs:property
  registry: docker.io/nicolaenicora

  # The container image
  # +docs:property
  repository: checker

  # Override the image tag to deploy by setting this variable.
  # If no value is set, the chart's appVersion is used.
  # +docs:property
  #wtag: 1.0.0

  # Setting a digest will override any tag.
  # +docs:property
  digest: sha256:fcde067efa182a503a6e9d7f3a6565bacf7cb884dce552c0c41feb319946bc33

  # Kubernetes imagePullPolicy.
  pullPolicy: IfNotPresent

  # Setting the arguments for the container
  # +docs:property
  args:
    - --graceful-shutdown=5
    - --graceful-shutdown-message="Graceful shutdown in %d seconds"

  command: "./checker"


# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets:
  - name: "registry-access"


# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

podDisruptionBudget:
  # Enable or disable the PodDisruptionBudget resource.
  #
  # This prevents downtime during voluntary disruptions such as during a Node upgrade.
  # For example, the PodDisruptionBudget will block `kubectl drain`
  # Pod is currently running.
  enabled: false

  # This configures the minimum available pods for disruptions. It can either be set to
  # an integer (e.g. 1) or a percentage value (e.g. 25%).
  # It cannot be used if `maxUnavailable` is set.
  # +docs:property
  # +docs:type=unknown
  # minAvailable: 1

  # This configures the maximum unavailable pods for disruptions. It can either be set to
  # an integer (e.g. 1) or a percentage value (e.g. 25%).
  # it cannot be used if `minAvailable` is set.
  # +docs:property
  # +docs:type=unknown
  # maxUnavailable: 1

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # Labels to add to the service
  labels: {}
  # Annotations to add to the service
  annotations: {}
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    - port: 8080
      protocol: TCP
      targetPort: http
      name: http


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /probe/liveness
    port: http-status
    scheme: HTTP
  failureThreshold: 1
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /probe/readiness
    port: http-status
    scheme: HTTP
  failureThreshold: 1
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional init containers on the output Deployment definition.
extraInitContainers: []

# Additional containers on the output Deployment definition.
extraContainers: []

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Additional ens on the output Deployment definition.
extraEnvs: []
# Additional envsFrom on the output Deployment definition.
extraEnvsFrom: []

nodeSelector: {}

tolerations: []

ports:
  - name: http-status
    containerPort: 8888
    protocol: TCP
  - name: http
    containerPort: 8080
    protocol: TCP

affinity: {}


config:
  isImmutable: false

  # Environment where the application is running
  environment: production
  # Labels associated to metrics, traces and logs
  labels: {}
