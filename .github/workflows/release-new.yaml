name: Release Please (Manual Trigger)

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-24.04
    steps:
      - name: Generate token from GitHub App
        id: generate-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.APP_PUSH_TAG_ID }}
          private_key: ${{ secrets.APP_PUSH_TAG_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.generate-token.outputs.token }}
          fetch-tags: true
          fetch-depth: 0
          submodules: recursive

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo RELOADAGENT | gpg-connect-agent
          git config --global user.name "GitHub CI Bot"
          git config --global user.email "github-ci[bot]@users.noreply.github.com"
          git config --global user.signingkey "${{ secrets.GPG_KEY_ID }}"
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true
          git config --global gpg.program gpg
          

      - name: Release Please
        id: github_release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go
          token: ${{ steps.generate-token.outputs.token }}

      - name: Stop if no release was created
        if: ${{ steps.github_release.outputs.release_created != 'true' }}
        run: |
          echo "ℹ️ No release was created — a release PR was likely opened for the next version."
          echo "👉 Please merge the release PR and re-run this workflow to publish the release."
          exit 0

      - name: Setup
        run: |
          mkdir assets
          echo "repo_name=$(basename "$GITHUB_REPOSITORY")" >> $GITHUB_ENV

      - name: Generate Build Version
        uses: hashicorp/actions-generate-metadata@f1d852525201cb7bbbf031dd2e985fb4c22307fc #main
        with:
          repositoryOwner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          version: ${{ steps.github_release.outputs.version }}
          product: ${{ env.repo_name }}
          metadataFileName: ${{ github.workspace }}/build_version.json

      - name: Print Build Version
        run: cat ${{ github.workspace }}/build_version.json

      - name: Generate SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@efc74245d6802c8cefd925620515442756c70d8f #v2.0.0
        with:
          version: v1
          args: mod -json -licenses -output ./assets/sbom.json
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}


      - name: Run Trivy sbom vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 #v0.32.0
        with:
          scan-type: 'sbom'
          scan-ref: "./assets/sbom.json"
          format: 'json'
          output: './assets/trivy-sbom-vuln.json'

      - name: Run trivy repository security scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 #v0.32.0
        with:
          token-setup-trivy: ${{ steps.generate-token.outputs.token }}
          scan-type: repository
          format: json
          output: ./assets/trivy-repository-vuln.json
          severity: CRITICAL,HIGH,MEDIUM

      - name: Run tfsec security scanner
        uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6 #v1.0.3
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
          format: json

      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: gh release upload ${{ steps.github_release.outputs.tag_name }} ./assets/**

